add_library(thirdparty INTERFACE)


# glfw
if (UNIX AND NOT APPLE)
    set(GLFW_BUILD_WAYLAND ${ENABLE_WAYLAND} CACHE BOOL "" FORCE)
endif ()
set(GLFW_LIBRARY_TYPE SHARED CACHE STRING "Build shared libraries" FORCE)
set(GLFW_BUILD_EXAMPLES OFF CACHE BOOL "Build the GLFW example programs" FORCE)
set(GLFW_BUILD_TESTS OFF CACHE BOOL "Build the GLFW test programs" FORCE)
set(GLFW_BUILD_DOCS OFF CACHE BOOL "Build the GLFW documentation" FORCE)
set(GLFW_INSTALL OFF CACHE BOOL "Generate installation target" FORCE)
add_subdirectory(glfw)

# glm
set(GLM_BUILD_LIBRARY ON CACHE BOOL "Build dynamic/static library" FORCE)
set(GLM_BUILD_TESTS OFF CACHE BOOL "Build the test programs" FORCE)
set(GLM_BUILD_INSTALL OFF CACHE BOOL "Generate the install target" FORCE)
set(GLM_ENABLE_CXX_98 OFF CACHE BOOL "Enable C++ 98" FORCE)
set(GLM_ENABLE_CXX_11 OFF CACHE BOOL "Enable C++ 11" FORCE)
set(GLM_ENABLE_CXX_14 OFF CACHE BOOL "Enable C++ 14" FORCE)
set(GLM_ENABLE_CXX_17 OFF CACHE BOOL "Enable C++ 17" FORCE)
set(GLM_ENABLE_CXX_20 OFF CACHE BOOL "Enable C++ 20" FORCE)
set(GLM_ENABLE_LANG_EXTENSIONS OFF CACHE BOOL "Enable language extensions" FORCE)
set(GLM_DISABLE_AUTO_DETECTION OFF CACHE BOOL "Disable platform, compiler, arch and C++ language detection" FORCE)
set(GLM_ENABLE_FAST_MATH ON CACHE BOOL "Enable fast math optimizations" FORCE)
set(GLM_ENABLE_SIMD_SSE2 ON CACHE BOOL "Enable SSE2 optimizations" FORCE)
set(GLM_ENABLE_SIMD_SSE3 ON CACHE BOOL "Enable SSE3 optimizations" FORCE)
set(GLM_ENABLE_SIMD_SSSE3 ON CACHE BOOL "Enable SSSE3 optimizations" FORCE)
set(GLM_ENABLE_SIMD_SSE4_1 ON CACHE BOOL "Enable SSE 4.1 optimizations" FORCE)
set(GLM_ENABLE_SIMD_SSE4_2 ON CACHE BOOL "Enable SSE 4.2 optimizations" FORCE)
set(GLM_ENABLE_SIMD_AVX ON CACHE BOOL "Enable AVX optimizations" FORCE)
set(GLM_ENABLE_SIMD_AVX2 ON CACHE BOOL "Enable AVX2 optimizations" FORCE)
set(GLM_ENABLE_SIMD_NEON ON CACHE BOOL "Enable ARM NEON optimizations" FORCE)
set(GLM_FORCE_PURE OFF CACHE BOOL "Force 'pure' instructions" FORCE)
add_subdirectory(glm)
